<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.attend.emp.mapper.EmpMapper">
	
	<!-- 전체조회 -->
 	<select id="selectEmpAll" resultType="EmpVO">
 		SELECT e.emp_id
 				, emp_name
 				, tel
 				, mail
 				, hire_date
 				, expire_date
 				, address
 				, photo
 				, department_emp_id
 				, find_codename(department_id) departmentName
 				, find_codename(emp_position) posName
 				, a.account_id
        		, a.password
		FROM emp e
			INNER JOIN account a
			ON e.emp_id = a.emp_id
		ORDER BY e.emp_id
 	</select>
 	
 	<!-- 단건조회 -->
 	<select id="selectEmpInfo" resultType="EmpVO">
 		 SELECT e.emp_id
 				, emp_name
 				, tel
 				, mail
 				, hire_date
 				, expire_date
 				, address
 				, photo
 				, department_emp_id
 				, FIND_CODENAME(department_id) departmentName
 				, FIND_CODENAME(emp_position) posName
 				, a.account_id
        		, a.password
		FROM emp e
			INNER JOIN account a
			ON e.emp_id = a.emp_id
		WHERE e.emp_id = #{empId}
 	</select>
 	
 	<!-- 등록 emp_id 섵택 -->
 	<select id="selectEmpId" resultType="int">
 		SELECT NVL(MAX(emp_id),0)+1 emp_id 
 		FROM emp
 	</select>
 	
 	<!-- 등록 -->
 	<insert id="insertEmpInfo" parameterType="EmpVO">	
		INSERT ALL
		    INTO emp
		    	(
		    	emp_id
		    	, emp_name
		    	, tel
		    	, mail
		    	, hire_date
		    	, address
		    	, photo
		    	, department_id
		    	, emp_position
		    	)
		    VALUES
		        (
		            #{empId}
		            , #{empName}
		            , #{tel}
		            , #{mail}
		            , #{hireDate}
		            , #{address}
		            , #{photo}
					, FIND_CODE(#{departmentName})
				    , FIND_CODE(#{posName})
		        )
		    INTO account
		    (account_id, password, emp_id)
		    VALUES
		        (
		        	#{accountId}
		        	,#{password}
		            , #{empId}
		        )
		SELECT * FROM dual
 	</insert>
 	
 	<!-- 수정  (이름, 연락처, 이메일, 주소, 퇴사일, 부서, 직위)-->
 	<update id="updateEmpInfo" parameterType="empVO">
 		UPDATE emp
		SET emp_name = #{empName}
		    ,tel = #{tel}
		    , mail = #{mail}
		    , address = #{address}
		    <choose>
		    	<when test="expireDate != null">
		    	, expire_date = #{expireDate}
		    	</when>
		    </choose>
		    , department_id = find_code(#{departmentName})
		    , emp_position = find_code(#{posName})
		WHERE emp_id = #{empId}
 	</update>
 	
 	
 	<!-- 삭제 - 프로시저 사용 -->
 	<delete id="deleteEmpInfo" parameterType="int">
 		CALL DEL_EMP(#{empId})
 	</delete>
 	
 	
 	<update id="resetPwd" parameterType="int">
 		UPDATE account
		SET password = '0000'
		WHERE emp_id = #{empId};
 		
 	</update>

	
	

</mapper>